import 'package:flutter/material.dart';
import 'package:location/location.dart';
import 'dart:async';

void main() => runApp(GpsConcept());

class GpsConcept extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // widget for the title section
    Widget titleSection = Container(
      padding: EdgeInsets.all(32.0),
      child: Row(
        children: [
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Container(
                  child: Text(
                    'Lake Lanier Campground',
                    style: TextStyle(
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  padding: EdgeInsets.only(bottom: 10.0),
                ),
                Text(
                  'Cumming, Georgia',
                  style: TextStyle(
                    color: Colors.grey,
                  ),
                )
              ],
            ),
          ),
          Icon(
            Icons.star,
            color: Colors.red[500],
          ),
          Text('41'),
        ],
      ),
    );

    // method to return columns of buttons
    Column buildButtonColumn(IconData icon, String label) {
      Color color = Theme.of(context).primaryColor;

      return Column(
        children: <Widget>[
          Icon(icon, color: color),
          Container(
            padding: EdgeInsets.only(top: 10.0),
            child: Text(
              label,
              style: TextStyle(
                fontSize: 12.0,
                fontWeight: FontWeight.w400,
                color: color,
              ),
            ),
          )
        ],
      );
    }

    // widget to contain the button columns generated by buildButtonColumn method
    Widget buttonSection = Container(
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: <Widget>[
          buildButtonColumn(Icons.star, 'Ratings'),
          buildButtonColumn(Icons.chat_bubble, 'Reviews'),
          buildButtonColumn(Icons.gps_fixed, 'Location'),
        ],
      ),
    );

    Widget textSection = Container(
      padding: EdgeInsets.all(20.0),
      child: Text(
          'Lake Lanier is a reservoir in the northern portion of the U.S. state of Georgia. It was created by the completion ' +
              'of Buford Dam on the Chattahoochee River in 1956, and is also fed by the waters of the Chestatee River.'),
    );

    Widget imageSection = Image.asset(
      'images/lakelanier.jpg',
      fit: BoxFit.cover,
    );

    //Widget mapSection = MapV

    void testLocation() async {
      var location = new Location();
      var currentLocation = <String, double>{};

      try {
        currentLocation = await location.getLocation;

        print(currentLocation['latitude'].toString() +
            ' ' +
            currentLocation['longitude'].toString());
      } on Exception {
        currentLocation = null;
      }

      // return Text(currentLocation['latitude'].toString() +
      //     ' ' +
      //     currentLocation['longitude'].toString());
    }

    return MaterialApp(
      title: 'GPS Concept',
      home: Scaffold(
        appBar: AppBar(
          title: Text('GPS Concept'),
        ),
        body: ListView(
          children: [
            imageSection,
            titleSection,
            buttonSection,
            textSection,
            ListTile(
              title: Text('tap this title'),
              onTap: testLocation,
            ),
          ],
        ),
      ),
    );
  }
}

// class GpsCoordinates extends StatefulWidget {
//   @override
//   State<StatefulWidget> createState() {
//     return _GpsCoordinatesState();
//   }
// }

// class _GpsCoordinatesState extends State {
//   @override
//   Widget build(BuildContext context) {
//     String coordinates = '';

//     testLocation() async {
//       var location = new Location();
//       var currentLocation = <String, double>{};

//       try {
//         currentLocation = await location.getLocation;

//         // print(currentLocation['latitude'].toString() +
//         //     ' ' +
//         //     currentLocation['longitude'].toString());
//         setState(() {
//           coordinates = currentLocation['latitude'].toString() +
//               ' ' +
//               currentLocation['longitude'].toString();
//         });
//       } on Exception {
//         currentLocation = null;
//       }
//     }

//     testLocation();

//     return Scaffold(
//       body: Text(coordinates),
//     );
//   }
// }
